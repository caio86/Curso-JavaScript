Regras de identificadores
	Podem começar com letra, "$" ou "_"
	Não podem começar com números
	É possível usar letras ou números
	É possível usar acentos e símbolos
	Não podem conte espaços
	Não podem ser palavras reservadas

Sintaxe
	"=" équivale a "recebe", sinal de atribuição
	String fica dentro de aspas("",'',``)
	"!" équivale a "não" logicamente.
	"+" Faz uma junção lógica, ou adição dependendo da situação
	Simplificação de auto-atribuição de variáveis numéricas
		Isso funciona comm qualquer operador Aritméticos e em outras linguagens de programação
		n = n + 4 == n += 4
	function (parâmetros){Comandos} <- essa é a sintaxe de uma função
	Eventos DOM <- são colocados como parametros de uma tag HTML para chamar uma função
		Ex: onclick, onmousemove, onmouseout, etc...
		onclick(NomedaFunção()) <- sintaxe

Comandos [] <- opcional {} <- comando
	//, ou, /*{}*/ <- comentário
	{alert('')} <- abre um pop-up de mensagem.
	{confirm('')} <- abre um pop-up de confirmação(ok/cancelar).
	{prompt('')} <- abre um pop-up de digitação.
	{var} <- atribui variáveis
	(${}) <- Ao colocar ${} dentro de uma string é possível mostrar variáveis dentro das strings
	{console.log()} <- Escreve no console

	Estruturas Condicionais
		if() {} <- Estrutura condicional 'se'
			else {} <- Estrutura condicional 'senão'

	Converter variáveis
		{[Number.]parseInt(n)} <- converte para número inteiro
		{parseFloat(n)} <- converte a variável (n) para número real
		{Number(n)} <- Transforma a variável (n) para número, real ou inteiro, automático dependendo da ocasião
		{String(n)} <- Transforma a variável (n) para string
		{n.toString()} <- Transforma a variável (n) para string

	Métodos de Acesso
		{getElementsByTagName('')[x]} <- seleciona elementos através da Tag
		{getElementById('')} <- seleciona elementos através do id único
		{getElementsByName('')[]} <- seleciona elementos através do nome
		{getElementsByClassName('')[]} <- seleciona elementos através da classe
		{querySelector('div.class')} <- seleciona elementos através de identificadores em sintaxe de css
		{querySelectorAll('')}

	Formatação de Strings
		{s.length} <- Diz quantos caracteres a string tem
		{s.toUpperCase} <- Tudo para 'Maiúsculas'
		{s.toLowerCase} <- Tudo para 'Minúsculas
	Formatação de Números
		{n1.toFixed(2)} <- Amostra o número n1, com 2 casas decimais
		{n1.toLocaleString('pt-br', {style: 'currency', currency: 'brl'})} <- vai alterar a localização de uma string

Tipos de variáveis primitívos
	Number <- são números inteiros ou reais
	String <- são conjuntos de carácteres
	boolean <- são variáveis lógicas | verdadeiro ou falso

Operadores
	Ordem de precedência

		() - primeiro
		**
		* | / | %
		+ | - | - ultimo

		Ordem: Aritméticos -> Relacionais -> Lógicos -> Ternário

		Lógicos: ! -> && -> ||
	Aritméticos
		(+)Adição
		5+2=7
		(-)Subtração
		5-2=3
		(*)Multiplicação
		5*2=10
		(/)Divisão real
		5/2=2.5
		(%)Resto da Divisão Inteira
		5%2=1
		(**)Poténcia
		5**2=25
	Incremento
		'++' <- soma uma unidade á variável
		'--' <- subtrai uma unidade á variável
	Relacionais
		'>' <- Maior que
		'<' <- Menor que
		'>='<- Maior ou igual que
		'<='<- Menor ou igual que
		'=='<- Valores iguais
		'!='<- Valores diferente
		'==='<- Valores iguais e mesmo tipo
		'!=='<- Tipos diferentes
	Lógicos
		'!' <- Valor lógico de "Não", inverte a operação lógica
		'&&'<- Valor lógico de "e", resulta em verdadeiro quando recebe dois valores verdadeiro
		'||'<- Valor lógico de "ou", resulta em verdadeiro quando recebe pelo menos um valor verdadeiro
	Ternário
		Retorna um de dois valores dependo do resultado do valor lógico do teste
		Sintaxe: "teste-lógico ? 'True' : 'False'"
		Ex: média>=7.0?"Aprovado":"Reprovado"

Tipos de Condição
	Condição simples <- usa apenas o if(){}
		if(){
			bloco de comandos
		}
	Condição composta <- usa o if(){} e o else(){}
		if(){
			bloco de comandos
		} else {
			bloco de comandos
		}

Arvore DOM
	window <- raiz da Arvore DOM, possui todos os objetos do site.
		location <- localização do site. (url, pagina atual, pagina anterior, etc.)
		document <- documento atual.
			html
				head
					meta
					title
				body
					h1
					p
					p
						strong
					div
		history <- histórico de navegação no site.

Dicas
	Variáveis
		Maiúsculas e minúsculas fazem diferença
		Tente escolher nomes coerentes para as variáveis
		Evite se tornar um 'programador alfabeto' ou um 'programador contador'

Anotações

	Um servidor guarda arquivos e os manda para o cliente quando solicitado, e o cliente é a maquina que o usuário utiliza.


	HTML(Hyper Text Markup Language): configura o conteúdo do site.

	CSS(Cascading Style Sheet): configura o design do site.

	JavaScript: Configura a programação do lado do cliente do site.


	JavaScript criado pela NetScape.

	Java é diferente de JavaScript, mas ambas são criadas a partir da linguagem C.

	ECMAScript é a versão padronizada do JavaScript.


	DOM = Document Object Model
